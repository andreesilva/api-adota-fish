"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Validator_1 = global[Symbol.for('ioc.use')]("Adonis/Core/Validator");
class CreateClienteValidator {
    constructor(ctx) {
        this.ctx = ctx;
        this.schema = Validator_1.schema.create({
            nome: Validator_1.schema.string({ trim: true }, [
                Validator_1.rules.minLength(3),
                Validator_1.rules.maxLength(255)
            ]),
            email: Validator_1.schema.string({ trim: true }, [
                Validator_1.rules.email(),
                Validator_1.rules.maxLength(255),
                Validator_1.rules.unique({ table: "users", column: "email" }),
            ]),
            password: Validator_1.schema.string({}, [
                Validator_1.rules.minLength(8),
                Validator_1.rules.maxLength(180)
            ]),
            telefone: Validator_1.schema.string({ trim: true }, [
                Validator_1.rules.mobile({ locale: ["pt-BR"] }),
                Validator_1.rules.maxLength(15)
            ]),
        });
        this.messages = {
            required: "{{field}} é obrigatório para o cadastro",
            "email.email": "{{field}} deve ser um email válido",
            "email.unique": "{{field}} já está em uso",
            "password.minLenght": "{{field}} deve ter no mínimo 8 caracteres",
            "password.maxlenght": "{{field}} deve ter no máximo 180 caracteres",
            "telefone.mobile": "{{field}} deve ser um telefone válido",
        };
    }
}
exports.default = CreateClienteValidator;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ3JlYXRlQ2xpZW50ZVZhbGlkYXRvci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkNyZWF0ZUNsaWVudGVWYWxpZGF0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwyRUFBMEU7QUFHMUUsTUFBcUIsc0JBQXNCO0lBQ3pDLFlBQXNCLEdBQXdCO1FBQXhCLFFBQUcsR0FBSCxHQUFHLENBQXFCO1FBRXZDLFdBQU0sR0FBRyxrQkFBTSxDQUFDLE1BQU0sQ0FBQztZQUM1QixJQUFJLEVBQUUsa0JBQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLEVBQUU7Z0JBQ2xDLGlCQUFLLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQztnQkFDbEIsaUJBQUssQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDO2FBQ3JCLENBQUM7WUFDRixLQUFLLEVBQUUsa0JBQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLEVBQUU7Z0JBQ25DLGlCQUFLLENBQUMsS0FBSyxFQUFFO2dCQUNiLGlCQUFLLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQztnQkFDcEIsaUJBQUssQ0FBQyxNQUFNLENBQUMsRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBRSxPQUFPLEVBQUUsQ0FBQzthQUNsRCxDQUFDO1lBQ0YsUUFBUSxFQUFFLGtCQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRTtnQkFDMUIsaUJBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDO2dCQUNsQixpQkFBSyxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUM7YUFDckIsQ0FBQztZQUNGLFFBQVEsRUFBRSxrQkFBTSxDQUFDLE1BQU0sQ0FBQyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsRUFBRTtnQkFDdEMsaUJBQUssQ0FBQyxNQUFNLENBQUMsRUFBRSxNQUFNLEVBQUUsQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDO2dCQUNuQyxpQkFBSyxDQUFDLFNBQVMsQ0FBQyxFQUFFLENBQUM7YUFDcEIsQ0FBQztTQUNILENBQUMsQ0FBQztRQUVJLGFBQVEsR0FBbUI7WUFDaEMsUUFBUSxFQUFFLHlDQUF5QztZQUNuRCxhQUFhLEVBQUUsb0NBQW9DO1lBQ25ELGNBQWMsRUFBRSwwQkFBMEI7WUFDMUMsb0JBQW9CLEVBQUUsMkNBQTJDO1lBQ2pFLG9CQUFvQixFQUFFLDZDQUE2QztZQUNuRSxpQkFBaUIsRUFBRSx1Q0FBdUM7U0FDM0QsQ0FBQTtJQTdCaUQsQ0FBQztDQThCcEQ7QUEvQkQseUNBK0JDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc2NoZW1hLCBDdXN0b21NZXNzYWdlcywgcnVsZXMgfSBmcm9tICdAaW9jOkFkb25pcy9Db3JlL1ZhbGlkYXRvcidcbmltcG9ydCB0eXBlIHsgSHR0cENvbnRleHRDb250cmFjdCB9IGZyb20gJ0Bpb2M6QWRvbmlzL0NvcmUvSHR0cENvbnRleHQnXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENyZWF0ZUNsaWVudGVWYWxpZGF0b3Ige1xuICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgY3R4OiBIdHRwQ29udGV4dENvbnRyYWN0KSB7IH1cblxuICBwdWJsaWMgc2NoZW1hID0gc2NoZW1hLmNyZWF0ZSh7XG4gICAgbm9tZTogc2NoZW1hLnN0cmluZyh7IHRyaW06IHRydWUgfSwgW1xuICAgICAgcnVsZXMubWluTGVuZ3RoKDMpLFxuICAgICAgcnVsZXMubWF4TGVuZ3RoKDI1NSlcbiAgICBdKSxcbiAgICBlbWFpbDogc2NoZW1hLnN0cmluZyh7IHRyaW06IHRydWUgfSwgW1xuICAgICAgcnVsZXMuZW1haWwoKSxcbiAgICAgIHJ1bGVzLm1heExlbmd0aCgyNTUpLFxuICAgICAgcnVsZXMudW5pcXVlKHsgdGFibGU6IFwidXNlcnNcIiwgY29sdW1uOiBcImVtYWlsXCIgfSksXG4gICAgXSksXG4gICAgcGFzc3dvcmQ6IHNjaGVtYS5zdHJpbmcoe30sIFtcbiAgICAgIHJ1bGVzLm1pbkxlbmd0aCg4KSxcbiAgICAgIHJ1bGVzLm1heExlbmd0aCgxODApXG4gICAgXSksXG4gICAgdGVsZWZvbmU6IHNjaGVtYS5zdHJpbmcoeyB0cmltOiB0cnVlIH0sIFtcbiAgICAgIHJ1bGVzLm1vYmlsZSh7IGxvY2FsZTogW1wicHQtQlJcIl0gfSksXG4gICAgICBydWxlcy5tYXhMZW5ndGgoMTUpXG4gICAgXSksXG4gIH0pO1xuXG4gIHB1YmxpYyBtZXNzYWdlczogQ3VzdG9tTWVzc2FnZXMgPSB7XG4gICAgcmVxdWlyZWQ6IFwie3tmaWVsZH19IMOpIG9icmlnYXTDs3JpbyBwYXJhIG8gY2FkYXN0cm9cIixcbiAgICBcImVtYWlsLmVtYWlsXCI6IFwie3tmaWVsZH19IGRldmUgc2VyIHVtIGVtYWlsIHbDoWxpZG9cIixcbiAgICBcImVtYWlsLnVuaXF1ZVwiOiBcInt7ZmllbGR9fSBqw6EgZXN0w6EgZW0gdXNvXCIsXG4gICAgXCJwYXNzd29yZC5taW5MZW5naHRcIjogXCJ7e2ZpZWxkfX0gZGV2ZSB0ZXIgbm8gbcOtbmltbyA4IGNhcmFjdGVyZXNcIixcbiAgICBcInBhc3N3b3JkLm1heGxlbmdodFwiOiBcInt7ZmllbGR9fSBkZXZlIHRlciBubyBtw6F4aW1vIDE4MCBjYXJhY3RlcmVzXCIsXG4gICAgXCJ0ZWxlZm9uZS5tb2JpbGVcIjogXCJ7e2ZpZWxkfX0gZGV2ZSBzZXIgdW0gdGVsZWZvbmUgdsOhbGlkb1wiLFxuICB9XG59XG4iXX0=